~~~{%
r.post "reset" do
  sleep 1 # intentionally allow modal to close on the frontend first
  turbo_stream.replace "contact-modal", render(ContactModal.new step: 1)
end

r.is do
  render_with =>
    text_message
  render_with(
    data: { layout: :emails }
  ) =>
    html_message
  
  next html_message if r.params[:preview]

  if r.params[:bot_check] != "11" && r.params[:bot_check] != "eleven"
    next turbo_stream.replace_all(
      "#contact-modal sl-input[name=bot_check]",
      ContactModal.new(step: 1).bot_check(error: true)
    )
  end

  mail = Mail.deliver do
    to      "Jared White <jared@whitefusion.studio>"
    from    "Jared White <jared@whitefusion.studio>"
    subject "Whitefusion Contact Form"

    text_part do
      body text_message
    end

    html_part do
      content_type "text/html; charset=UTF-8"
      body html_message
    end
  end

  turbo_stream.update "contact-modal", render(ContactModal.new step: 2)
end
%}~~~

# Whitefusion Contact Form

## Email Address

{{ r.params[:email] }}

## Message

{{ r.params[:message] }}
